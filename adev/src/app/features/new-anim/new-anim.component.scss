/*
 * Global transition.
 *
 * Scrolling via mouse scroll wheel will result in a non-continuous scrollY,
 * unlike a touchpad, which in turn results in "gaps" in the animation calculations.
 * Therefore, in order to keep things smooth, we are systematically adding CSS
 * transitions to the CSS properties that else look jagged when scrolling.
 */
$transition: 200ms linear;

:host {
  display: block;
  position: relative;

  .animation {
    border: 1px solid gold;
    position: fixed;
    top: 0;
    bottom: 0;
    right: 0;
    left: 0;

    .x-axis,
    .y-axis {
      position: absolute;
      background-color: rgb(0, 255, 13, 0.2);
      z-index: 9999;
      pointer-events: none;
    }
    .x-axis {
      width: 100%;
      height: 1px;
      top: calc(50% - 0.5px);
    }
    .y-axis {
      width: 1px;
      height: 100%;
      left: calc(50% - 0.5px);
      top: 0;
    }

    .layer {
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;

      h2 {
        font-size: 4vw;
        font-weight: 600;
        white-space: nowrap;
        margin-top: 0;
        margin-bottom: 0.5em;
      }

      p {
        font-weight: 400;
        color: var(--quaternary-contrast);
        font-size: clamp(1rem, 1vw, 2rem);
        line-height: 1.5;
        width: clamp(375px, 50%, 600px);
        margin: 0 auto;
      }

      h2,
      p {
        background-color: var(--page-background);
        box-shadow: 0 0 20px 20px var(--page-background);
      }
    }

    .logo-layer {
      user-select: none;
      pointer-events: none;

      .svg {
        position: absolute;
        width: 100%;
        height: 100%;
        fill-rule: evenodd;
        clip-rule: evenodd;
        stroke-linejoin: round;
        stroke-miterlimit: 2;
      }

      .wrapper {
        transform: scale(0.6);
        transform-origin: 50% 50%;

        .logo {
          transition: transform $transition;

          .shield {
            &,
            .shield-middle {
              transform-origin: 177px 200px;
              transition: transform $transition;
            }

            .shield-bottom-a-arc {
              transform-origin: 0 302px;
              transition: transform $transition;
            }

            .shield-bottom-extension {
              transform-origin: 177px 340px;
              transition: transform $transition;
              transform: scale(0);
            }
          }

          .letter {
            transition: opacity $transition;
          }
        }
      }
    }

    .works-at-any-scale-layer,
    .loved-by-millions-layer,
    .build-for-everyone-layer {
      user-select: none;
      pointer-events: none;
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      text-align: center;
      opacity: 0;
      z-index: 1;
      transition:
        transform $transition,
        opacity $transition;
    }

    .works-at-any-scale-layer {
      transform: scale(0);
    }

    .loved-by-millions-layer,
    .build-for-everyone-layer {
      transform: scale(0.75);
    }

    .build-for-everyone-layer {
      .title {
        color: transparent;
        display: inline-block;
        background: linear-gradient(110deg, rgba(231, 14, 231) 0, rgb(255, 0, 93) 50%, #3a373f 0%);
        background-size: 205% 100%;
        background-clip: text;
        background-size: 205% 100%;
        background-position-x: 100%;
        transition: background-position-x $transition;
      }
    }

    .meteor-field-layer {
      overflow: hidden;

      .field {
        position: absolute;
        flex-wrap: wrap;
        align-content: flex-start;
        gap: var(--anim-meteor-gap);
        display: none;
        transform: scale(1.42);
        top: 0;
        left: 0;
        transform-origin: 50% 50%;
        transition:
          opacity $transition,
          transform $transition;

        .meteor {
          position: relative;
          width: var(--anim-meteor-width);
          height: var(--anim-meteor-height);
          opacity: 0;
          transform: translate(200%, 200%) scale(0.3);
          transition:
            opacity $transition,
            transform $transition;

          &::after {
            content: '';
            position: absolute;
            width: 4px;
            height: var(--anim-meteor-tail-length);
            border-radius: 2px;
            transform-origin: top center;
            transform: rotate(var(--anim-meteor-tilt-angle));
            top: 0;
            left: 0;
          }

          &.type-1::after {
            background: linear-gradient(
              rgb(204, 47, 79) 0,
              rgb(199, 64, 199) 75%,
              transparent 100%
            );
          }
        }
      }
    }
  }
}
